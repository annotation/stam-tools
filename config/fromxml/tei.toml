#default whitespace handling (Collapse or Preserve)
whitespace = "Collapse"
default_set = "http://www.tei-c.org/ns/1.0#" 

[namespaces]
#this defines the XML namespace prefixes you can use in this configuration
xml = "http://www.w3.org/XML/1998/namespace"
xsd =  "http://www.w3.org/2001/XMLSchema"
xlink = "http://www.w3.org/1999/xlink"
tei = "http://www.tei-c.org/ns/1.0"
rdf = "http://www.w3.org/1999/02/22-rdf-syntax-ns#"


[context]
#this defines context variables that will be available to the templating engine globally


#Define some base elements that we reuse later for actual elements (prevents unnecessary repetition)
[baseelements.common]
id = "{% if ?.@xml:id %}{{ @xml:id }}{% endif %}"

    [[baseelements.common.annotationdata]]
    set = "{{ namespaces.rdf }}"
    key = "type"
    #value is a full URI for w3anno/RDF export
    value = "{{ namespaces.tei }}#{{ localname }}"

    [[baseelements.common.annotationdata]]
    #extra ID attribute in XML namespace
    set = "{{ namespaces.xml }}"
    key = "id"
    value = "{{ @xml:id }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    set = "{{ namespaces.xml }}"
    key = "lang"
    value = "{{ @xml:lang }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    set = "{{ namespaces.xml }}"
    key = "space"
    value = "{{ @xml:space }}"
    skip_if_missing = true

    # the rest here are common TEI attributes from att.global: https://tei-c.org/release/doc/tei-p5-doc/en/html/ref-att.global.html

    [[baseelement.common.annotationdata]]
    key = "n"
    value = "{{ @n }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    #tei:type attribute
    key = "type"
    value = "{{ @type }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "facs"
    value = "{{ @facs }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "rend"
    value = "{{ @rend }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "style"
    value = "{{ @style }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "rendition"
    value = "{{ @rendition }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "change"
    value = "{{ @change }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "ana"
    value = "{{ @ana }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "corresp"
    value = "{{ @corresp }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "synch"
    value = "{{ @synch }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "sameAs"
    value = "{{ @sameAs }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "copyOf"
    value = "{{ @copyOf }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "next"
    value = "{{ @next }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "prev"
    value = "{{ @prev }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "exclude"
    value = "{{ @exclude }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "select"
    value = "{{ @select }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "cert"
    value = "{{ @cert }}"
    skip_if_missing = true

    [[baseelement.common.annotationdata]]
    key = "resp"
    value = "{{ @resp }}"
    skip_if_missing = true

#Define some base elements
[baseelements.withtext]
text = true
annotation = "TextSelector"

# elements are matched in reverse-order, so put more generic statements before more specific ones

[[elements]]
base = [ "common", "withtext" ] #base element to derive from (multiple allowed)
path = "*" # default matching for elements, will match all

# Elements with only a path are passed through without mapping text or annotation
[[elements]]
path = "//tei:TEI"

[[elements]]
path = "//tei:teiHeader"

# By default, ignore any tags in the head (unless they're mentioned specifically later in the config)
[[elements]]
path = "//tei:teiHeader/*"
stop = true

[[elements]]
path = "//tei:teiHeader/tei:fileDesc"

[[elements]]
path = "//tei:teiHeader/tei:fileDesc/*"
stop = true

[[elements]]
path = "//tei:teiHeader/tei:fileDesc/tei:titleStmt"

[[elements]]
path = "//tei:teiHeader/tei:fileDesc/tei:publicationStmt"

[[elements]]
#facsimile is skipped
path = "//tei:facsimile"
stop = true

[[elements]]
base = [ "common" ] #base element to derive from (multiple allowed)
path = "//tei:fileDesc/tei:titleStmt/tei:title"
annotation = "ResourceSelector"

    [[elements.annotationdata]]
    set = "http://www.tei-c.org/ns/1.0"
    key = "title"
    value = "{{$.}}"
    skip_if_missing = true

[[elements]]
base = [ "common" ] #base element to derive from (multiple allowed)
path = "//tei:fileDesc/tei:titleSmt"
annotation = "ResourceSelector"

    [[elements.annotationdata]]
    set = "http://www.tei-c.org/ns/1.0"
    key = "title"
    value = "{{$.}}"
    skip_if_missing = true

[[elements]]
base = [ "common" ]
path = "//tei:fileDesc/tei:titleSmt/tei:editor"
annotation = "ResourceSelector"

    [[elements.annotationdata]]
    key = "editor"
    value = "{{$.}}"
    skip_if_missing = true

[[elements]]
base = [ "common" ]
path = "//tei:fileDesc/tei:publicationStmt/tei:publisher"
annotation = "ResourceSelector"
stop = true

    [[elements.annotationdata]]
    key = "publisher"
    value = "{{$.}}"
    skip_if_missing = true

[[elements]]
base = [ "common" ]
path = "//tei:fileDesc/tei:publicationStmt/tei:pubPlace"
annotation = "ResourceSelector"
stop = true

    [[elements.annotationdata]]
    key = "pubPlace"
    value = "{{$.}}"
    skip_if_missing = true

[[elements]]
base = [ "common" ]
path = "//tei:fileDesc/tei:publicationStmt/tei:availability/tei:license"
annotation = "ResourceSelector"
stop = true

    [[elements.annotationdata]]
    key = "license"
    value = "{{$. | trim}}"
    skip_if_missing = true


[[elements]]
base = [ "common" ]
path = "//tei:fileDesc/tei:publicationStmt/tei:date"
annotation = "ResourceSelector"
stop = true

    [[elements.annotationdata]]
    key = "date"
    value = "{{$.}}"
    skip_if_missing = true

[[elements]]
base = [ "common" ]
path = "//tei:fileDesc/tei:publicationStmt/tei:ptr"
handling = "ResourceSelector"

    [[elements.annotationdata]]
    key = "target"
    value = "{{$.}}"
    skip_if_missing = true

[[elements]]
path = "//tei:fileDesc/tei:publicationStmt/*"
stop = true

# Determine how various structural elements are converted to text 

[[elements]]
base = [ "common" ]
path = "//tei:br"
textsuffix = "\n"

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:body"

    [[elements.annotationdata]]
    #not a real TEI attribute but used in the eDITem project
    key = "divRole"
    value = "{{ @divRole }}"
    skip_if_missing = true

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:div"
textsuffix = "\n\n"

    [[elements.annotationdata]]
    #not a real TEI attribute but used in the eDITem project
    key = "divRole"
    value = "{{ @divRole }}"
    skip_if_missing = true

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:p"
textsuffix = "\n\n"

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:head"
textsuffix = "\n\n"

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:lg"
textsuffix = "\n\n"

    [[elements.annotationdata]]
    #not a real TEI attribute but used in the eDITem project
    key = "rhyme"
    value = "{{ @rhyme }}"
    skip_if_missing = true

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:l"
textsuffix = "\n"

[[elements]]
base = [ "common" ]
path = """//tei:space[@dim="vertical"]"""
textsuffix = "\n\n"

    [[elements.annotationdata]]
    key = "unit"
    value = "{{ @unit }}"
    skip_if_missing = true

    [[elements.annotationdata]]
    key = "lines"
    value = "{{ @lines }}"
    skip_if_missing = true

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:item"
textprefix = "* "
textsuffix = "\n"

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:item/tei:item"
textprefix = "  * "
textsuffix = "\n"

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:item/tei:item/tei:item"
textprefix = "    * "
textsuffix = "\n"

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:note"
textprefix = "[{% if ?.@n %}{{@n}}{% else %}*{% endif %}]:"

[[elements]]
base = [ "common" ]
path = "//tei:pb"
annotation = "TextSelectorBetweenMarkers"
text = true

    [[elements.annotationdata]]
    key = "page"
    value = "{{ @n }}"
    skip_if_missing = true


    [[elements.annotationdata]]
    key = "f"
    value = "{{ @f }}"
    skip_if_missing = true


[[elements]]
base = [ "common", "withtext" ]
path = "//tei:rhyme"

    [[elements.annotationdata]]
    key = "label"
    value = "{{ @label }}"
    skip_if_missing = true


[[elements]]
base = [ "common", "withtext" ]
path = "//tei:figure"

    [[elements.annotationdata]]
    #associate the url directly with the figure, this does assume only one graphic per figure which is a simplification
    key = "url"
    value = "{{ $tei:graphic/@url }}"
    skip_if_missing = true

[[elements]]
#does not really have text (zero-span element)
base = [ "common", "withtext" ]
path = "//tei:ptr"

    [[elements.annotationdata]]
    key = "target"
    value = "{{ @target }}"
    skip_if_missing = true

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:ref"

    [[elements.annotationdata]]
    key = "target"
    value = "{{ @target | tokenize }}"
    skip_if_missing = true

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:opener"
textsuffix = "\n\n"

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:closer"
textsuffix = "\n\n"

[[elements]]
base = [ "common", "withtext" ]
path = "//tei:salute"
textsuffix = "\n"
